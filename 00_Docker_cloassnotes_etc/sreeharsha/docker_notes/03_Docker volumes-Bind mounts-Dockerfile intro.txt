(03) Docker volumes, Bind mounts, Dockerfile intro:-
     ================================================

# volumes are the preferrred mechanism for persisting data generated by and used by Docker containers.
# while bind mounts are dependent on the directory structure of the host machine
# volumes are completely managed by Docker.
# volumes have several advantages over bind mounts   
# so, generaly most recomended way is Docker volumes 
# Docker volumes are created with local driver as default. we can use another plugins to store into cloud as well 

ubuntu@ip-172-31-5-58:~$ docker volume ls
DRIVER    VOLUME NAME

ubuntu@ip-172-31-5-58:~$ docker volume create vol1
vol1

ubuntu@ip-172-31-5-58:~$ docker volume create vol2
vol2

ubuntu@ip-172-31-5-58:~$ docker volume create vol3
vol3

ubuntu@ip-172-31-5-58:~$ docker volume ls
DRIVER    VOLUME NAME
local     vol1
local     vol2
local     vol3

root@ip-172-31-5-58:~# ls /var/lib/docker/volumes/
backingFsBlockDev  metadata.db  vol1  vol2  vol3


root@ip-172-31-5-58:~# docker run --rm -dit --name nginx -v vol1:/var/www/html ubuntu:latest
e15a5ff37d365937770053012561b719aac6283a444b0f603f70f0121d621aa1

root@ip-172-31-5-58:~# docker exec -it nginx bash
root@e15a5ff37d36:/# cd /var/www/html 
root@e15a5ff37d36:/var/www/html# apt update && apt install vim git nginx -y

root@e15a5ff37d36:/var/www/html# rm -rf *
root@e15a5ff37d36:/var/www/html# cd /tmp
root@e15a5ff37d36:/tmp# git clone https://github.com/AshnaWiar/website-rick-and-morty.git
root@e15a5ff37d36:/tmp# cd website-rick-and-morty/

root@e15a5ff37d36:/tmp/website-rick-and-morty# cp -rf public_html/* /var/www/html/
root@e15a5ff37d36:/tmp/website-rick-and-morty# cd /var/www/html/
root@e15a5ff37d36:/var/www/html# ls
css  img  index.html  js
root@e15a5ff37d36:/var/www/html# ctrl pq  #read escape sequence

root@ip-172-31-5-58:~# docker stop $(docker ps -aq)
e15a5ff37d36

root@ip-172-31-5-58:~# ls /var/lib/docker/volumes/vol1/_data/
css  img  index.html  js


root@ip-172-31-5-58:~# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

root@ip-172-31-5-58:~# I=1; while [ $I -lt 10 ] ; do docker run --rm -dit --name NGINX$I -p 800$I:80 -v vol1:/usr/share/nginx/html nginx:latest ; I=$(( $I + 1 )) ; done
14ac4ced803b741f4344471c917517d70c63da621c07f5f4b4940c68207a8b77
039c712d82961957a31e71d2b4666b476454e5327fc63f8db347c52afc8f148b
c0b782ea507d3a4f2414913cf30787db705d7610ddb193075337d4c9f0277675
8c6f391337ada3c2d2155496ec5e6f95d6b89f38155a6f44782d458d386da424
31f73c71d76b601eec30b96aabf83913c8bde10233a853f263ce73f3fa41a36a
2297842b7d015968997d44e6bf2bf9954d837ba21a14f4f0b3bfe845bfa9cca4
dfc4fd11e5d6d97a406de12433a5d1a51bf7007a03c7f6279e860c95dacd7871
06d113efe12296981b19f2b3357aedc8b4189f307d0f01cdf7bde389621fc157
3ae18eeeed5199a3075b6ca88a46570360a9b4b30dd7af776da25903afd4cfc0
root@ip-172-31-5-58:~#


root@ip-172-31-5-58:~# docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                                   NAMES
3ae18eeeed51   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8009->80/tcp, :::8009->80/tcp   NGINX9
06d113efe122   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8008->80/tcp, :::8008->80/tcp   NGINX8
dfc4fd11e5d6   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8007->80/tcp, :::8007->80/tcp   NGINX7
2297842b7d01   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8006->80/tcp, :::8006->80/tcp   NGINX6
31f73c71d76b   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8005->80/tcp, :::8005->80/tcp   NGINX5
8c6f391337ad   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8004->80/tcp, :::8004->80/tcp   NGINX4
c0b782ea507d   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8003->80/tcp, :::8003->80/tcp   NGINX3
039c712d8296   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8002->80/tcp, :::8002->80/tcp   NGINX2
14ac4ced803b   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:8001->80/tcp, :::8001->80/tcp   NGINX1
root@ip-172-31-5-58:~#


root@ip-172-31-5-58:~# curl -s http://localhost:8001

root@ip-172-31-5-58:~# curl ip4.info
3.223.140.197

# browse 3.223.140.197:8001 to 3.223.140.197:8009 


root@ip-172-31-5-58:~# docker stop $( docker ps -aq )
3ae18eeeed51
06d113efe122
dfc4fd11e5d6
2297842b7d01
31f73c71d76b
8c6f391337ad
c0b782ea507d
039c712d8296
14ac4ced803b
root@ip-172-31-5-58:~#


root@ip-172-31-5-58:~# I=1
root@ip-172-31-5-58:~# while [ $I -lt 6 ]
> do
> docker run --rm -dit --name NGINXCON$I -p 900$I:80 -v vol1:/usr/share/nginx/html nginx:latest
> I=$(( $I + 1 ))
> done
1eea5ae3f63f7bb42feb5de97e181d2a2d783b73fdf6466bb0b694cbbcbc0ee5
b699eeb7083584234ef615d26ba87929d6efbf4295c0ee0fb774fab7694ef420
2d7e760f38ecc94c3c381172ed008d2fe9933fa0d568be621e01ccc94427a25a
19963c0d34a59a227675f9eea85a29b5561334391ea78cb99f3eae727371974a
6616bc7a6bf311cdbbdf81a7b3b68aca3572a35516c81914610e14bad798d6e5
root@ip-172-31-5-58:~#


# browse 3.223.140.197:9001 to 3.223.140.197:9005


root@ip-172-31-5-58:~# docker stop $( docker ps -aq )
6616bc7a6bf3
19963c0d34a5
2d7e760f38ec
b699eeb70835
1eea5ae3f63f


# note: in general, volumes are used mostly for db servers (layer 3, why because its changeable data where as web server/app server mostly static content)


---->
Bind mounts :
===========

root@ip-172-31-5-58:~# mkdir /tmp/testfolder
root@ip-172-31-5-58:~# cp -r /var/lib/docker/volumes/vol1/_data/* /tmp/testfolder/
root@ip-172-31-5-58:~# ls /tmp/testfolder/
css  img  index.html  js


root@ip-172-31-5-58:~# I=1; while [ $I -lt 4 ] ; do docker run --rm -dit --name NGINX$I -p 700$I:80 -v /tmp/testfolder:/usr/share/nginx/html nginx:latest ; I=$(( $I + 1 )) ; done
ff79b687d757a369327fbbe590f696d60a8bc64a1c23bcd4e2be2c6182642316
5d653341a5822a1c9785f85e486b2215edf11dce9d55888f16e2761daaafefa8
08980ce7326e08cf75987e7fcb112e41e157d6f38317d228c449d9094f92c1ca
root@ip-172-31-5-58:~#

root@ip-172-31-5-58:~# curl ip4.info
3.223.140.197

# browse  3.223.140.197:7001 to 3.223.140.197:7003


==>
root@ip-172-31-5-58:~# cd /tmp/testfolder/
root@ip-172-31-5-58:/tmp/testfolder# cp index.html index-edit.html

$ vim index-edit.html
<title>Home-nginx2</title>
<h1>Hi npr!</h1>

root@ip-172-31-5-58:/tmp/testfolder# docker cp index-edit.html NGINX2:/usr/share/nginx/html/index.html
# browse  3.223.140.197:7001 to 3.223.140.197:7003 (now content will change)

root@ip-172-31-5-58:~# echo "hi welcome npr to docker" > docker.txt
root@ip-172-31-5-58:~# docker cp docker.txt NGINX1:/usr/share/nginx/html/


# browse  3.223.140.197:7001 to 3.223.140.197:7003/docker.txt 



--->

$ docker logs NGINX1
$ docker logs -f NGINX2
$ docker exec -it NGINX1 top 